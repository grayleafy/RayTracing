#pragma once
#include<cstdio>
#include<cstdlib>
#include "Shader.h"

#define uint unsigned int

uint V[16 * 32] = {
	2147483648u, 1073741824u, 536870912u, 268435456u, 134217728u, 67108864u, 33554432u, 16777216u, 8388608u, 4194304u, 2097152u, 1048576u, 524288u, 262144u, 131072u, 65536u, 32768u, 16384u, 8192u, 4096u, 2048u, 1024u, 512u, 256u, 128u, 64u, 32u, 16u, 8u, 4u, 2u, 1u,
	2147483648u, 3221225472u, 2684354560u, 4026531840u, 2281701376u, 3422552064u, 2852126720u, 4278190080u, 2155872256u, 3233808384u, 2694840320u, 4042260480u, 2290614272u, 3435921408u, 2863267840u, 4294901760u, 2147516416u, 3221274624u, 2684395520u, 4026593280u, 2281736192u, 3422604288u, 2852170240u, 4278255360u, 2155905152u, 3233857728u, 2694881440u, 4042322160u, 2290649224u, 3435973836u, 2863311530u, 4294967295u,
	2147483648u, 3221225472u, 1610612736u, 2415919104u, 3892314112u, 1543503872u, 2382364672u, 3305111552u, 1753219072u, 2629828608u, 3999268864u, 1435500544u, 2154299392u, 3231449088u, 1626210304u, 2421489664u, 3900735488u, 1556135936u, 2388680704u, 3314585600u, 1751705600u, 2627492864u, 4008611328u, 1431684352u, 2147543168u, 3221249216u, 1610649184u, 2415969680u, 3892340840u, 1543543964u, 2382425838u, 3305133397u,
	2147483648u, 3221225472u, 536870912u, 1342177280u, 4160749568u, 1946157056u, 2717908992u, 2466250752u, 3632267264u, 624951296u, 1507852288u, 3872391168u, 2013790208u, 3020685312u, 2181169152u, 3271884800u, 546275328u, 1363623936u, 4226424832u, 1977167872u, 2693105664u, 2437829632u, 3689389568u, 635137280u, 1484783744u, 3846176960u, 2044723232u, 3067084880u, 2148008184u, 3222012020u, 537002146u, 1342505107u,
	2147483648u, 1073741824u, 536870912u, 2952790016u, 4160749568u, 3690987520u, 2046820352u, 2634022912u, 1518338048u, 801112064u, 2707423232u, 4038066176u, 3666345984u, 1875116032u, 2170683392u, 1085997056u, 579305472u, 3016343552u, 4217741312u, 3719483392u, 2013407232u, 2617981952u, 1510979072u, 755882752u, 2726789248u, 4090085440u, 3680870432u, 1840435376u, 2147625208u, 1074478300u, 537900666u, 2953698205u,
	2147483648u, 1073741824u, 1610612736u, 805306368u, 3355443200u, 603979776u, 1442840576u, 4211081216u, 3766484992u, 1883242496u, 2824863744u, 338690048u, 2663907328u, 3743678464u, 3067478016u, 2344288256u, 1207992320u, 1677737984u, 905994240u, 3405787136u, 679528448u, 1413489664u, 4267726336u, 4012964608u, 2118705280u, 2942595136u, 515287136u, 2676692016u, 3603439304u, 3139739428u, 2161563350u, 1086045115u,
	2147483648u, 3221225472u, 2684354560u, 3489660928u, 1476395008u, 2483027968u, 1040187392u, 3808428032u, 3196059648u, 599785472u, 505413632u, 4077912064u, 1182269440u, 1736704000u, 2017853440u, 2221342720u, 3329785856u, 2810494976u, 3628507136u, 1416089600u, 2658719744u, 864310272u, 3863387648u, 3076993792u, 553150080u, 272922560u, 4167467040u, 1148698640u, 1719673080u, 2009075780u, 2149644390u, 3222291575u,
	2147483648u, 1073741824u, 2684354560u, 1342177280u, 2281701376u, 603979776u, 301989888u, 754974720u, 1988100096u, 2654994432u, 136314880u, 1678770176u, 2988965888u, 2098462720u, 4272029696u, 3125346304u, 438599680u, 1226522624u, 3300237312u, 3816001536u, 4135585792u, 3728737280u, 2820672000u, 873465088u, 975702144u, 1494483520u, 3970040096u, 2538144464u, 1822721896u, 3613084132u, 3432358018u, 2271450689u,
	2147483648u, 1073741824u, 2684354560u, 1342177280u, 671088640u, 3556769792u, 1778384896u, 1895825408u, 947912704u, 1480589312u, 3927965696u, 823132160u, 2561146880u, 139722752u, 3257532416u, 3844407296u, 4071784448u, 2034778112u, 4205060096u, 3178434560u, 413665280u, 1213465600u, 1646922240u, 3039102208u, 3669131904u, 2907196736u, 2426676896u, 3430094608u, 539495304u, 269746564u, 2282357922u, 2218067473u,
	2147483648u, 1073741824u, 3758096384u, 2952790016u, 2550136832u, 2483027968u, 2315255808u, 1526726656u, 864026624u, 3653238784u, 1914699776u, 1058013184u, 3250061312u, 2800484352u, 1401290752u, 703922176u, 171606016u, 455786496u, 3549618176u, 1778348032u, 3929540608u, 2871788544u, 1269173760u, 4259646208u, 1610779008u, 4026976576u, 2016733344u, 605713840u, 305826616u, 3475687836u, 3113412898u, 2197780721u,
	2147483648u, 1073741824u, 2684354560u, 268435456u, 134217728u, 1811939328u, 2650800128u, 587202560u, 1468006400u, 2915041280u, 2141192192u, 2446327808u, 1233649664u, 3470000128u, 2282356736u, 739180544u, 1041072128u, 857194496u, 1605394432u, 3254300672u, 3784148992u, 3000484864u, 504392192u, 1663611136u, 4152723584u, 3183723200u, 2008703968u, 4260868912u, 3615493624u, 3988785180u, 3751805978u, 2177894957u,
	2147483648u, 1073741824u, 536870912u, 805306368u, 1476395008u, 2885681152u, 2516582400u, 721420288u, 3565158400u, 155189248u, 3802136576u, 1380974592u, 1311244288u, 3340500992u, 1654521856u, 308740096u, 1846771712u, 4147232768u, 983080960u, 3192164352u, 4164651008u, 3693986816u, 3993412096u, 3072561920u, 447221120u, 2388397760u, 2688420704u, 1882653104u, 2017167560u, 2620246612u, 3456542538u, 2267256725u,
	2147483648u, 3221225472u, 2684354560u, 1342177280u, 4160749568u, 2348810240u, 3791650816u, 855638016u, 260046848u, 557842432u, 2510290944u, 1584398336u, 3624402944u, 472121344u, 3122003968u, 4013359104u, 361136128u, 2658123776u, 2015059968u, 1278513152u, 1108248576u, 1661717504u, 4155337216u, 2910033152u, 2004879232u, 1832912064u, 3617588256u, 1030751792u, 797446008u, 2976123604u, 3451258746u, 2185692887u,
	2147483648u, 3221225472u, 1610612736u, 2415919104u, 939524096u, 3288334336u, 1107296256u, 2734686208u, 4051697664u, 2856321024u, 4242538496u, 2232418304u, 3758620672u, 1342963712u, 1476788224u, 1409875968u, 2047049728u, 1728856064u, 3011780608u, 155856896u, 225384448u, 794469376u, 484953600u, 3574878464u, 3087007872u, 67109056u, 570425440u, 855638160u, 3380609080u, 1849688260u, 3202351170u, 638582947u,
	2147483648u, 1073741824u, 536870912u, 4026531840u, 2818572288u, 1409286144u, 2583691264u, 2634022912u, 511705088u, 1556086784u, 2099249152u, 2366636032u, 612892672u, 1908670464u, 3953262592u, 1977548800u, 1805811712u, 902905856u, 1269014528u, 3318927360u, 3819005952u, 2447084544u, 2041508352u, 215957760u, 1730838656u, 1343569984u, 436314144u, 3708670192u, 1048832168u, 2898971732u, 3576517274u, 3642593693u,
	2147483648u, 3221225472u, 536870912u, 3489660928u, 3623878656u, 3288334336u, 1174405120u, 2231369728u, 2776629248u, 1992294400u, 2912944128u, 1789919232u, 765984768u, 2864447488u, 229244928u, 2058420224u, 3584524288u, 3200073728u, 2476990464u, 1001721856u, 908703744u, 1299348480u, 2609078784u, 667211520u, 3056187520u, 2373090496u, 3145949728u, 4156872656u, 1848227928u, 1232239620u, 4253246054u, 1925502805u
};

void setSobol(Shader &shader) {
	shader.use();
	for (int i = 0; i < 16 * 32; i++) {
		string s = "V[";
		s = s + to_string(i) + "]";
		shader.setUint(s, V[i]);
	}
}

// 格林码 
uint grayCode(uint i) {
	return i ^ (i >> 1);
}

// 生成第 d 维度的第 i 个 sobol 数
float sobol(uint d, uint i) {
	uint result = 0;
	uint offset = d * 32;
	for (uint j = 0; i; i >>= 1, j++)
		if (i & 1)
			result ^= V[j + offset];

	return float(result) * (1.0f / float(0xFFFFFFFFU));
}



